let Z={mInt:4294967296,m32:e=>(t=1)=>{let a=e+=1831565813;return a=Math.imul(a^a>>>15,1|a),a^=a+Math.imul(a^a>>>7,61|a),((a^a>>>14)>>>0)/Z.mInt*t},ctx:null,init:()=>{Z.ctx=new(window.AudioContext||window.webkitAudioContext)},get aC(){return this.ctx},get sampleRate(){return this.aC.sampleRate},fxNodes:{},noiseBuffer:null,waveforms:["sine","square","sawtooth","triangle"],filters:["lowpass","highpass","bandpass","lowshelf","highshelf","peaking","allpass"],randSample:()=>2*Math.random()-1,getDistCurve:e=>{let t=new Float32Array(sampleRate),a=Math.PI/180;for(let n=0;n<Z.sampleRate;n++){let r=2*n/Z.sampleRate-1;t[n]=(3+e)*r*20*a/(Math.PI+e*Math.abs(r))}return t},id:e=>JSON.stringify(e).split("").reduce(((e,t)=>(e=(e<<5)-e+t.charCodeAt(0))&e),0),freq:(e,t)=>261.63*Math.pow(2,(e+t)/12),adsr:(e,t,a,n)=>{let{A:r,D:o,S:l,R:i}=a,s=t+r[0]+o[0]+l[0]+i[0],f=e.linearRampToValueAtTime.bind(e);return e.setValueAtTime(r[1],t),f(r[1]*n,t+r[0]),f(o[1]*n,t+r[0]+o[0]),f(l[1]*n,t+r[0]+o[0]+l[0]),f(i[1]*n,s),s},render:(e,t,a)=>{if(0==t.length)return;let n=a.rootNote+e,r=[],o=[],l=1/(t.length*a.instrument.oscs.length),i=Z.aC.currentTime+0,s=0,f=Z.sampleRate;t.forEach((e=>{a.instrument.oscs.forEach((t=>{let o,c=Z.freq(n,e+12*t.oct+t.detune);if("noise"==t.waveform){if(o=Z.aC.createBufferSource(),!Z.noiseBuffer){let e=2*f;Z.noiseBuffer=Z.aC.createBuffer(1,e,f);let t=Z.noiseBuffer.getChannelData(0);for(let a=0;a<e;a++)t[a]=Z.randSample()}o.buffer=Z.noiseBuffer,o.loop=!0}else o=Z.aC.createOscillator(),o.type=t.waveform||"sine",o.frequency.value=c;let u=Z.aC.createGain();s=Math.max(s,Z.adsr(u.gain,i,t.adsrGain,a.gain*l));let p=t.gLFO?Z.aC.createOscillator():null;if(p){let e=Z.aC.createGain();p.type=t.gLFO.type||"sine",p.frequency.value=t.gLFO.frequency||1,e.gain.value=t.gLFO.depth||0,p.connect(e),e.connect(u.gain),p.start(i),p.stop(s)}let d=Z.aC.createBiquadFilter();d.Q.value=t.filterQ||0,s=Math.max(s,Z.adsr(d.frequency,i,t.adsrFilter,2e4),Z.adsr(d.Q,i,t.adsrFilterQ,30));let h=t.fLFO?Z.aC.createOscillator():null;if(h){let e=Z.aC.createGain();h.type=t.fLFO.type||"sine",h.frequency.value=t.fLFO.frequency||1,e.gain.value=t.fLFO.depth||0,h.connect(e),e.connect(d.frequency),h.start(i),h.stop(s)}t.pENV&&"noise"!=t.waveform&&(s=Math.max(s,Z.adsr(o.frequency,i,t.pENV,c*t.pENV.amount||0)));let m="noise"!==t.waveform&&t.pLFO?Z.aC.createOscillator():null;if(m){let e=Z.aC.createGain();m.type=t.pLFO.type||"sine",m.frequency.value=t.pLFO.frequency||1,e.gain.value=t.pLFO.depth*c||0,m.connect(e),e.connect(o.frequency),m.start(i),m.stop(s)}if(t.FM){let e=Z.aC.createOscillator(),a=Z.aC.createGain();e.type=t.FM.type||"sine",e.frequency.value=Math.min(Math.max(t.FM.frequency*c||1,-22050),22050),a.gain.value=t.FM.depth||0,e.connect(a),a.connect(o.frequency),e.start(i),e.stop(s)}let y,g,v=Z.aC.createStereoPanner();if("function"==typeof a.pan?v.pan.setValueAtTime(a.pan(a)||0,i):v.pan.setValueAtTime(a.pan||0,i),o.connect(d),d.connect(u),u.connect(v),t?.fx?.del){let e=t.fx.del,a=Z.id(e);if(y=Z.fxNodes[a],!y){y=Z.aC.createDelay(),y.delayTime.value=e.time;let t=Z.aC.createGain();t.gain.value=e.feedback,y.connect(t),t.connect(y),Z.fxNodes[a]=y}}else{let e=Z.id({...t,d:"0"});y=Z.fxNodes[e],y||(y=Z.aC.createGain(),Z.fxNodes[e]=Z.aC.createGain())}if(v.connect(y),t?.fx?.verb){let e=t.fx.verb,a=Z.id(e);if(g=Z.fxNodes[a],!g){g=Z.aC.createConvolver();let t=Z.aC.createGain(),n=f*e.duration,r=Z.aC.createBuffer(2,n,f),o=r.getChannelData(0),l=r.getChannelData(1);for(let t=0;t<n;t++)o[t]=l[t]=Z.randSample()*Math.pow(1-t/n,e.decay);g.buffer=r,t.gain.value=1,Z.fxNodes[a]=t}}else{let e=Z.id({...t,r:"0"});g=Z.fxNodes[e],g||(g=Z.aC.createGain(),Z.fxNodes[e]=Z.aC.createGain())}y.connect(g),g.connect(Z.aC.destination),r.push(o)}))}));let c=a?.dist?.curve||null;c&&(nDist.curve=new Float32Array(c),nDist.oversample=a.dist.oversample||"none",o.forEach((e=>{e.connect(nDist)})),nDist.connect(Z.aC.destination)),r.forEach((e=>{e.start(i),e.stop(s)}))},generateRandomInstrument:e=>{e=parseInt(e);let t=Z.m32(e),a=[],n=(e,a)=>{let n=[t(a[0]),t(a[1]),t(a[2]),t(a[3])];return n.normalize=function(){let e=Math.max(...this);return this.map((t=>t/e))},n=n.normalize(),{A:[t(e[0]),n[0]],D:[t(e[1]),n[1]],S:[t(e[2]),n[2]],R:[t(e[3]),n[3]]}},r=[2,2,1,2],o=[0,1,1,0],l=[.1,.2,.3,.5],i=[{t:"pad",g:[r,o],f:[r,o],p:[r,o],o:6,w:Z.waveforms},{t:"key",g:[l,o],f:[l,o],p:[l,o],o:4,w:Z.waveforms},{t:"drum",g:[[.1,.02,.5,0],[1,.3,0,0]],f:[[.1,.11,.2,0],[1,1,0,0]],p:[[.25,.25,.2,0],[1,1,0,0]],o:2,w:["noise",...Z.waveforms]}],s=i[Math.floor(t(i.length))];for(let e=0;e<Math.floor(t(s.o)+1);e++){let e=s.w[Math.floor(t(s.w.length))],r="noise"!=e,o=()=>t(t()<.1?100:t()<.1?10:1)+.1;a.push({waveform:e,adsrGain:n(...s.g),filterType:Z.filters[Math.floor(t(Z.filters.length))],adsrFilter:n(...s.f),filterQ:t(30),adsrFilterQ:n(...s.f),gLFO:t()<.1&&{type:Z.waveforms[Math.floor(t(Z.waveforms.length))],frequency:o(),depth:t(1)},fLFO:!!(t()<.1&&r)&&{type:Z.waveforms[Math.floor(t(Z.waveforms.length))],frequency:o(),depth:t(8e3)},pLFO:!!(t()<.1&&r)&&{type:Z.waveforms[Math.floor(t(Z.waveforms.length))],frequency:o(),depth:t(10)+1},FM:!!(t()<.3&&r)&&{type:Z.waveforms[Math.floor(t(Z.waveforms.length))],frequency:o(),depth:t(100)+1},pENV:!!(t()<.05&&r)&&{amount:t(),...n(...s.p)},dist:t()<.05?{curve:()=>getDistCurve(t(500)),oversample:["none","2x","4x"][Math.floor(t(3))]}:void 0,oct:Math.floor(t(4))-3,detune:t()<.2?5:0,fx:{del:t()>.5?{time:t(.5),feedback:t(.8)}:null,verb:t()>.5?{duration:o(),decay:t()}:null}})}return{type:s.t,oscs:a}},play:(e,t)=>{let a={progression:[e],progressionStretch:1,poly:1,polyDir:"start",rootNote:0,gain:.5,pan:0,instrument:t};Z.render(0,[e],a)}};